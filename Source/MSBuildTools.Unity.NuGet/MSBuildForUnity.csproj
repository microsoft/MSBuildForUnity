<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>

    <PackageId>MSBuildForUnity</PackageId>
    <Description>Adds custom steps to the build to produce outputs suited for consumption in Unity 3D.</Description>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DevelopmentDependency>true</DevelopmentDependency>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>

    <IsTool>true</IsTool>
    <BuildOutputTargetFolder>buildCommon</BuildOutputTargetFolder>

    <!-- Don't warn about DLL's outside of the lib folder, the DLL is for the MSBuild task so it should NOT live in the lib folder -->
    <NoWarn>$(NoWarn);NU5100</NoWarn>
  </PropertyGroup>

  <ItemGroup>
   <Content Include="$(PackageId).props;$(PackageId).targets;">
      <PackagePath>build;buildCrossTargeting</PackagePath>
    </Content>

    <Content Include="
             UnityMetaFileGenerator.props;
             UnityMetaFileGenerator.targets;
             Publish.props;
             Publish.targets;
             RemapSymbolSources.props;
             RemapSymbolSources.targets;
             ">
      <PackagePath>buildCommon</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Framework" Version="15.9.20" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.9.20" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Mono.Cecil\Mono.Cecil.csproj" />
    <ProjectReference Include="..\Mono.Cecil\symbols\pdb\Mono.Cecil.Pdb.csproj" />
  </ItemGroup>

  <!--
      There is a runtime dependency on Mono.Cecil and Newtonsoft for the tasks. Unfortunately there is no way to express that as a NuGet package dependency for build tasks.
      The only real option is to bundle the Mono.Cecil DLL's into our own package.
    -->
  <Target Name="EmbedMonoCecil" AfterTargets="ResolveReferences">
    <ItemGroup>
      <Content Include="@(ReferencePath)" Condition="$([System.String]::new('%(ReferencePath.Filename)').StartsWith('Mono.Cecil'))" PackagePath="buildCommon" />
      <Content Include="@(ReferencePath)" Condition="$([System.String]::new('%(ReferencePath.Filename)').StartsWith('Newtonsoft'))" PackagePath="buildCommon" />
    </ItemGroup>
  </Target>
</Project>
