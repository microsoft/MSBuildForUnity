<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- This target filters the @(AllCopyLocalItems) item list based on the provided publish file blacklist. -->
  <Target Name="FilterCopyLocal" DependsOnTargets="PrepareForBuild" BeforeTargets="ResolveLockFileCopyLocalProjectDeps" Condition=" '@(NuGetPackageIdExclusionList)' != '' ">
    <ItemGroup>
      <!-- This duplicates each item in @(AllCopyLocalItems), once per item in @(NuGetPackageIdExclusionList). -->
      <AllCopyLocalItemsWithBlackListMetadata Include="@(AllCopyLocalItems)">
        <NuGetPackageIdExclusionList>%(NuGetPackageIdExclusionList.Identity)</NuGetPackageIdExclusionList>
      </AllCopyLocalItemsWithBlackListMetadata>

      <!-- This filters the list back down to just the items where the NuGetPackageId matches one of the items in NuGetPackageIdExclusionList (e.g. the blacklisted items of @(AllCopyLocalItems)). -->
      <BlackListedAllCopyLocalItems Include="@(AllCopyLocalItemsWithBlackListMetadata)" Condition=" '%(AllCopyLocalItemsWithBlackListMetadata.NuGetPackageId)' == '%(AllCopyLocalItemsWithBlackListMetadata.NuGetPackageIdExclusionList)' " />

      <!-- Finally, actually remove the items that have been identified as blacklisted. -->
      <AllCopyLocalItems Remove="@(BlackListedAllCopyLocalItems)" />
    </ItemGroup>
  </Target>

</Project>